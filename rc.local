# Put your custom commands here that should be executed once
# the system init finished. By default this file does nothing.

# Default values for environment variables
HETZNER_Token="YOUR_PRIVATE_HETZNER_TOKEN"
CF_Token="YOUR_PRIVATE_CLOUDFLARE_TOKEN"
CF_Account_ID="YOUR_CLOUDFLARE_ACCOUNT_ID"
DOMAINS="ANY.DOMAIN.COM,ANOTHER.DOMAIN.COM"
MAIL="YOURMAIL@ANY.DOMAIN.COM"

# Ensure .profile exists and contains Tokens
if [ ! -f /root/.profile ]; then
  cat > /root/.profile << EOF
export HETZNER_Token="$HETZNER_Token"
export CF_Token="$CF_Token"
export CF_Account_ID="$CF_Account_ID"
export DOMAINS="$DOMAINS"
EOF
else
  if ! grep -q '^export HETZNER_Token=' /root/.profile; then
    echo "export HETZNER_Token=\"$HETZNER_Token\"" >> /root/.profile
  fi
  if ! grep -q '^export CF_Token=' /root/.profile; then
    echo "export CF_Token=\"$CF_Token\"" >> /root/.profile
  fi
  if ! grep -q '^export CF_Account_ID=' /root/.profile; then
    echo "export CF_Account_ID=\"$CF_Account_ID\"" >> /root/.profile
  fi
  if ! grep -q '^export DOMAINS=' /root/.profile; then
    echo "export DOMAINS=\"$DOMAINS\"" >> /root/.profile
  fi
fi

# Source the profile to make variables available
. /root/.profile

# SSL script creation
if [ ! -f /root/ssl.sh ]; then
cat > /root/ssl.sh << EOF
#!/bin/sh

# Email configuration
MAIL=\${MAIL}
DOMAINS=\${DOMAINS}

# DNS service for ACME
if [ "\$1" = "cloudflare" ]; then
  SERVICE="dns_cf"
  SERVICE_TOKEN="\$CF_Token"
  SERVICE_ACCOUNT_ID="\$CF_Account_ID"
else
  SERVICE="dns_hetzner"
  SERVICE_TOKEN="\$HETZNER_Token"
fi

# Default Certificate Authority
CA="letsencrypt"

# Install ACME client if not already installed
if [ ! -f /root/.acme.sh/acme.sh ]; then
  curl -s https://get.acme.sh | sh -s email=\$MAIL
fi

# Construct domain arguments for multi-domain support
IFS=',' read -r -a DOMAIN_ARRAY <<< "\$DOMAINS"
DOMAIN_ARGS=""
for DOMAIN in "\${DOMAIN_ARRAY[@]}"; do
  DOMAIN_ARGS="\$DOMAIN_ARGS -d \$DOMAIN"
done

# Request and import certificate
/root/.acme.sh/acme.sh --force --issue --dns \$SERVICE --server \$CA \$DOMAIN_ARGS \
  --fullchainpath /etc/uhttpd.crt --keypath /etc/uhttpd.key \
  --reloadcmd "/etc/init.d/uhttpd restart" --log
EOF

chmod a+x /root/ssl.sh
fi

# Run SSL script in the background safely with default domains
/root/ssl.sh hetzner >/dev/null 2>&1 &

exit 0